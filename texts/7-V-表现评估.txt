A.实验设置
作者的将PnP实现为可插拔服务，即允许启用和不启用。PnP服务通过RPC接口跟闪电网络守护程序（lnd）[13]进行交互，这个网络是闪电网络全体节点的完整实现。PnP包含两个主要模块，即分类和计划求解器。在分类模块中，作者使用Curve 25529来实现签名和VRF（可验证随机函数），哈希算法是SHA256。

作者在包含30个节点的测试平台评估PnP的性能。节点之间的潜在支付通道是根据Watts-Strogatz小世界模型[20]随机生成的。我们知道，现实世界网络具有小世界特性，即存在聚集特性。作者设置，每个节点的预算是[1000，1500]区间内的随机数，可以拥有至多6个邻接节点，转发费用跟转发金额成正比，费率在[0.01，0.1]区间内随机分配。作者同时要求决策委员会的分类权重约为全体节点总权重的三分之一。支付中断概率设置成0.05，所有实验运行50个epoch。PnP是进行余额规划的第一步工作，作者将其跟使用不同设计的几种PnP变体进行比较，如下所示。
PNP_greedy：对于每种需求，我们首先从候选路径集选择具有最低转发费的最短路径，然后沿该路径建立支付管道。假如路径的剩余余额不能满足支付需求，则选择下一条最短的路径，直到选到合适的路径。
PNP_exp：决策委员会根据付款需求的期望，通过将约束条件（4）替换为约束条件（5）来解决余额规划问题。
PNP_rebalance：节点定期重新平衡其通道，我们将REVIVE[12]的重新平衡思想与PnP相结合。由于重新平衡的开销，我们将每个epoch的重新平衡操作限制在3次以内。
